****************************************
     CÓDIGO DIAPOSITIVA 6
****************************************
int[] vector = [1, 2, 3, 4, 5];
IEnumerable<int> secuencia = vector.Select(n => n * 3);
Mostrar(secuencia);


void Mostrar<T>(IEnumerable<T> secuencia)
{
   foreach (T elemento in secuencia)
   {
       Console.Write(elemento + " ");
   }
   Console.WriteLine();
}



****************************************
     CÓDIGO DIAPOSITIVA 29
****************************************
class Persona
{
   public string Nombre { get; private set; }
   public int Edad { get; private set; }
   public string Pais { get; private set; }
   public Persona(string nombre, int edad, string pais)
   {
       Nombre = nombre;
       Edad = edad;
       Pais = pais;
   }
   public override string ToString()
   {
      return $"{Nombre} ({Edad} años) {Pais.Substring(0, 3)}.";
   }

   // vamos a hardcodear una lista de personas
   // que usaremos en los siguientes ejemplos
   // para ello definimos el siguiente método estático
   public static List<Persona> GetLista()
   {
       return new List<Persona>() {
           new Persona("Pablo",15,"Argentina"),
           new Persona("Juan", 55,"Argentina"),
           new Persona("José",9,"Uruguay"),
           new Persona("María",33,"Uruguay"),
           new Persona("Lucía",16,"Perú"),
       };
   }
}
	


****************************************
     CÓDIGO DIAPOSITIVA 61
****************************************
----------Alumno.cs----------
namespace Escuela;
public class Alumno
{
   public int Id { get; set; }
   public string Nombre { get; set; } = "";
   public string? Email{ get; set; }
}
----------Examen.cs----------
namespace Escuela;
public class Examen
{
   public int Id { get; set; }
   public int AlumnoId { get; set; }
   public string Materia { get; set; } = "";
   public double Nota { get; set; }
   public DateTime Fecha { get; set; }
}



****************************************
     CÓDIGO DIAPOSITIVA 62
****************************************
using Microsoft.EntityFrameworkCore;

namespace Escuela;

public class EscuelaContext : DbContext
{
   
   public DbSet<Alumno> Alumnos { get; set; }
   public DbSet<Examen> Examenes { get; set; }
   

   protected override void OnConfiguring(DbContextOptionsBuilder
       optionsBuilder)
   {
       optionsBuilder.UseSqlite("data source=Escuela.sqlite");
   }
}



****************************************
     CÓDIGO DIAPOSITIVA 64
****************************************
using Escuela;

using (var context = new EscuelaContext())
{
   Console.WriteLine("-- Tabla Alumnos --");
   foreach (var a in context.Alumnos)
   {
       Console.WriteLine($"{a.Id} {a.Nombre}");
   }

   Console.WriteLine("-- Tabla Exámenes --");
   foreach (var ex in context.Examenes)
   {
       Console.WriteLine($"{ex.Id} {ex.Materia} {ex.Nota}");
   }
}


****************************************
     CÓDIGO DIAPOSITIVA 67
****************************************

namespace Escuela;

public class EscuelaSqlite
{
   public static void Inicializar()
   {
       using var context = new EscuelaContext();
       if (context.Database.EnsureCreated())
       {
           Console.WriteLine("Se creó base de datos");
       }
   }
}



****************************************
     CÓDIGO DIAPOSITIVA 75
****************************************
namespace Escuela;

public class EscuelaSqlite
{
  public static void Inicializar()
  {
      using var context = new EscuelaContext();
      if (context.Database.EnsureCreated())
      {
          Console.WriteLine("Se creó base de datos");
          context.Alumnos.Add(new Alumno() { Nombre = "Juan",Email="juan@gmail.com" });
          context.Alumnos.Add(new Alumno() { Nombre = "Ana" });
          context.Alumnos.Add(new Alumno() { Nombre = "Laura" });

          context.Examenes.Add(new Examen() { AlumnoId = 2, Materia = "Inglés", Nota = 9,
              Fecha = DateTime.Parse("4/4/2022") });
          context.Examenes.Add(new Examen() { AlumnoId = 1, Materia = "Inglés", Nota = 5,
              Fecha = DateTime.Parse("1/3/2019") });
          context.Examenes.Add(new Examen() { AlumnoId = 1, Materia = "Álgebra", Nota = 10,
              Fecha = DateTime.Parse("24/5/2021") });

          context.SaveChanges();
      }
  }
}




****************************************
     CÓDIGO DIAPOSITIVA 80
****************************************
using Escuela;

using var context = new EscuelaContext();
var query = context.Alumnos.Join(context.Examenes,
             a => a.Id,
             e => e.AlumnoId,
             (a, e) => new
             {
                 Alumno = a.Nombre,
                 Materia = e.Materia,
                 Nota = e.Nota
             });
foreach (var obj in query)
{
    Console.WriteLine(obj);
}



****************************************
     CÓDIGO DIAPOSITIVA 83
****************************************
using Escuela;

using var db = new EscuelaContext();

//Agregamos un nuevo alumno
var alumno = new Alumno() { Nombre = "Pablo" }; // el Id será establecido por SQLite
db.Add(alumno); // se agregará realmente con el db.SaveChanges()
db.SaveChanges(); //actualiza la base de datos. SQlite establece el valor de alumno.Id

// Agregamos un examen para el nuevo alumno
var examen = new Examen()
{
   AlumnoId = alumno.Id,
   Materia = "Historia",
   Nota = 9.5
};
db.Add(examen);
db.SaveChanges();


****************************************
     CÓDIGO DIAPOSITIVA 85
****************************************
using Escuela;

using var db = new EscuelaContext();

//borramos de la tabla Alumnos el registro con Id=3
var alumnoBorrar = db.Alumnos.Where(a => a.Id == 3).SingleOrDefault();
if (alumnoBorrar != null)
{
    db.Remove(alumnoBorrar); //se borra realmente con el db.SaveChanges()
}

//La nota en Inglés del alumno id=1 es un 5. La cambiamos a 7.5
var examenModificar = db.Examenes.Where(
                         e => e.AlumnoId == 1 && e.Materia == "Inglés").SingleOrDefault();
if (examenModificar != null)
{
    examenModificar.Nota = 7.5; //se modifica el registro en memoria
}

db.SaveChanges(); //actualiza la base de datos.


****************************************
     CÓDIGO DIAPOSITIVA 89
****************************************
using Microsoft.EntityFrameworkCore;
using Escuela;

var db = new EscuelaContext();

foreach (Alumno a in db.Alumnos.Include(a => a.Examenes))
{
    Console.WriteLine(a.Nombre);
    a.Examenes?.ToList()
        .ForEach(ex => Console.WriteLine($" - {ex.Materia} {ex.Nota}"));
}



****************************************
     CÓDIGO DIAPOSITIVA 92
****************************************

using Microsoft.EntityFrameworkCore;
using Escuela;

using var db = new EscuelaContext();

Alumno nuevo = new Alumno()
{
    Nombre = "Andrés",
    Examenes = new List<Examen>() {
        new Examen(){Materia="Lengua",Nota=7,Fecha = DateTime.Parse("5/5/2022") },
        new Examen(){Materia="Matemática",Nota=6,Fecha = DateTime.Parse("6/5/2022") }
    }
};
db.Add(nuevo);
db.SaveChanges();

foreach (Alumno a in db.Alumnos.Include(a => a.Examenes))
{
    Console.WriteLine(a.Nombre);
    a.Examenes?.ToList()
        .ForEach(ex => Console.WriteLine($" - {ex.Materia} {ex.Nota}"));
}






